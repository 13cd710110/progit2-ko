//////////////////////////
=== Git in Zsh
//////////////////////////
=== Zsh

(((zsh)))(((tab completion, zsh)))(((shell prompts, zsh)))
//////////////////////////
Git also ships with a tab-completion library for Zsh.
Just copy `contrib/completion/git-completion.zsh` to your home directory and source it from your `.zshrc`.
Zsh's interface is a bit more powerful than Bash's:
//////////////////////////
Git에는 Zsh용 탭 자동완성 스크립트도 들어 있다.
`contrib/completion/git-completion.zsh`를 홈 디렉토리에 복사하고 `.zshrc`에 설정(Source)한다.
Zsh은 Bash보다 더 강력하다.

[source,console]
----
$ git che<tab>
check-attr        -- display gitattributes information
check-ref-format  -- ensure that a reference name is well formed
checkout          -- checkout branch or paths to working tree
checkout-index    -- copy files from index to working directory
cherry            -- find commits not merged upstream
cherry-pick       -- apply changes introduced by some existing commits
----

//////////////////////////
Ambiguous tab-completions aren't just listed; they have helpful descriptions, and you can graphically navigate the list by repeatedly hitting tab.
This works with Git commands, their arguments, and names of things inside the repository (like refs and remotes), as well filenames and all the other things Zsh knows how to tab-complete.
//////////////////////////
Zsh은 선택지가 여러개일 때 단순히 이름만 보여주지 않는다. 간단한 설명도 함께 보여주고 탭 키로 고를 수 있다.
Git 명령어만이 아니라 아규먼트도 자동완성 해준다. 게다가 저장소의 리모트나 Refs같은 이름과 파일이름 같은 것도 자동완성 해준다. Zsh은 아는 모든 것을 자동완성 해준다.

//////////////////////////
Zsh happens to be fairly compatible with Bash when it comes to prompt customization, but it allows you to have a right-side prompt as well.
To include the branch name on the right side, add these lines to your `~/.zshrc` file:
//////////////////////////
Zsh 프롬프트는 Bash과 많이 비슷하지만 오른쪽 프롬프트가 더 있다.
오른쪽 프롬프트에 브랜치 이름을 나오게 하려면 `~/.zshrc` 파일에 아래 라인을 추가한다.

[source,console]
----
setopt prompt_subst
. ~/git-prompt.sh
export RPROMPT=$'$(__git_ps1 "%s")'
----

//////////////////////////
This results in a display of the current branch on the right-hand side of the terminal window, whenever your shell is inside a Git repository. It looks a bit like this:
//////////////////////////
쉘에서 Git 저장소 디렉토리로 이동하면 터미널 오른쪽에 현 브랜치 이름을 아래와 같이 보여준다.

//////////////////////////
.Customized `zsh` prompt.
image::images/zsh-prompt.png[Customized `zsh` prompt.]
//////////////////////////
.`zsh` 프롬프트 설정.
image::images/zsh-prompt.png[`zsh` 프롬프트 설정.]

//////////////////////////
Zsh is powerful enough that there are entire frameworks dedicated to making it better.
One of them is called "oh-my-zsh", and it can be found at https://github.com/robbyrussell/oh-my-zsh[].
oh-my-zsh's plugin system comes with powerful git tab-completion, and it has a variety of prompt "themes", many of which display version-control data.
<<oh_my_zsh_git>> is just one example of what can be done with this system.
//////////////////////////
Zsh의 강령함을 이끌어 내는 프레임워크가 있다.
"oh-my-zsh"이 대표적인데 https://github.com/robbyrussell/oh-my-zsh[]에서 찾을 수 있다.
Git 탭 자동완성도 "oh-my-zsh" 플러그인을 사용하면 되고 브랜치 이상의 정보를 보여주는 다양한 프롬프트 테마도 제공한다.
<<oh_my_zsh_git>>은 프롬프트 테마를 적용한 모습이다.

[[oh_my_zsh_git]]
//////////////////////////
.An example of an oh-my-zsh theme.
image::images/zsh-oh-my.png[An example of an oh-my-zsh theme.]
//////////////////////////
.oh-my-zsh 테마.
image::images/zsh-oh-my.png[oh-my-zsh 테마.]
