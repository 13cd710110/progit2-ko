=== 스마트 HTTP

(((serving repositories, HTTP)))
지금까지 인증 기능을 갖춘 SSH와 인증 기능이 없는 git 프로토콜을 배웠다. 이제는 이 두 기능을 한꺼번에 가진 기능을 알아보자.
서버에서 `git-http-backend` 명령어를 이용해 일단 기본적인 스마트 HTTP를 지원하는 Git 서버를 실행한다.((git commands, "http-backend"))
Git 클라이언트에서 `git fetch` 나 `git push` 를 실행하면 서버로 HTTP 요청을 하게 된다. 서버는 요청에서 경로와 헤더를 읽어 클라이언트가 HTTP로 통신하려 하는지 감지한다. 이는 1.6.6 버전 이상의 클라이언트에서 동작한다.
클라이언트가 스마트 HTTP 프로토콜을 지원한다고 서버가 판단하면 통신 방식을 스마트 HTTP 프로토콜로 바꾼다. 아니면 그냥 멍청한 짓을 계속한다. 덕분에 하위 호환성이 유지된다.

이제 설정해보자. CGI 서버로 아파치를 사용한다. 아파치가 없다면 리눅스에서는 다음과 같이 아파치를 설치할 수 있다.

[source,console]
----
$ sudo apt-get install apache2 apache2-utils
$ a2enmod cgi alias env
----

이 명령어 한 방이면 mod_cgi, mod_alias, mod_env도 사용할 수 있다. 다 앞으로 사용할 모듈들이다.

그리고 아파치 설정 파일을 수정한다. 그러면 `git http-backend`를 실행했을 때 모든 요청을 `/git` 경로로 받을 수 있다.

[source,console]
----
SetEnv GIT_PROJECT_ROOT /opt/git
SetEnv GIT_HTTP_EXPORT_ALL
ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/
----

`GIT_HTTP_EXPORT_ALL` 환경 변수를 설정하지 않으면 `git-daemon-export-ok` 파일이 있는 저장소에는 아무나 다 접근할 수 있게 된다. 그냥 데몬 동작과 똑같다.

다음엔 경로 설정을 해준다.

[source,console]
----
<Directory "/usr/lib/git-core*">
   Options ExecCGI Indexes
   Order allow,deny
   Allow from all
   Require all granted
</Directory>
----

마지막으로 인증 설정을 해준다.

[source,console]
----
<LocationMatch "^/git/.*/git-receive-pack$">
    AuthType Basic
    AuthName "Git Access"
    AuthUserFile /opt/git/.htpasswd
    Require valid-user
</LocationMatch>
----

`.htaccess` 파일에는 접근을 허가하려는 사용자의 비밀번호가 들어가 있어야 한다. 아래는 ``schacon''이란 사용자를 추가하는 방법이다.


[source,console]
----
$ htdigest -c /opt/git/.htpasswd "Git Access" schacon
----

아파치에는 사용자 인증방법이 많다. 그중 하나를 골라 사용해야 하는데 위에 설명한 방법이 가장 간단한 방법의 하나다. 이 방법을 이용하면 대부분의 경우 SSL을 이용해 통신한다.

웹 서버는 아파치 말고도 다른 서버를 사용할 수도 있고, 인증 방식도 다르므로 아파치 설정에 대해서 길게 이야기하지 않을 것이다. 대신 이것만 알아두었으면 한다. HTTP를 이용한 모든 통신에서는 `git http-backend`와 Git을 함께 사용한다는 것이다. Git은 그 자체로 인증 기능을 가지고 있지 않다. 하지만 웹 서버의 인증 레이어와 손쉽게 연동할 수 있게 되어있다. CGI를 실행할 수 있는 웹 서버라면 어떤 서버든지 붙일 수 있다. 가장 좋아하는 서버를 사용하길 바란다.

[NOTE]
====
아파치 웹 서버에서 인증 설정에 대해 더 자세히 알아보려면 아파치 문서를 참고하길 바란다.(http://httpd.apache.org/docs/current/howto/auth.html[])
====
